import org.jetbrains.kotlin.gradle.tasks.KotlinCompile


def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

//apply plugin: 'com.android.library'
apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
apply plugin: 'kotlin-kapt'


  def keystoreProperties = new Properties()
  def keystorePropertiesFile = rootProject.file('key.properties')
  if (keystorePropertiesFile.exists()) {
      keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
  }

  android {
    compileSdk = 33

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
        coreLibraryDesugaringEnabled = true
    }

//    kotlinOptions {
//        jvmTarget = JavaVersion.VERSION_17.toString()
//    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.maroonedlab.wireguard_flutter"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdkVersion 24
        targetSdkVersion 33
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        buildConfigField 'int', 'MIN_SDK_VERSION', "$minSdkVersion.apiLevel"
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }
    buildTypes {
              
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
//            minifyEnabled true
//            shrinkResources true
//            proguardFiles "proguard-android-optimize.txt", "proguard-rules.pro"
//            packagingOptions {
//                exclude "DebugProbesKt.bin"
//                exclude "kotlin-tooling-metadata.json"
//            }
            signingConfig signingConfigs.release
            applicationVariants.all { variant ->
                variant.outputs.all {
                    outputFileName = "Echo V${flutterVersionName}.apk"
                }
            }
        }
    }
      namespace 'com.maroonedlab.wireguard_flutter'
  }

flutter {
    source '../..'
}

dependencies {
    //implementation(project(":tunnel"))
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    //implementation 'com.wireguard.android:tunnel:1.0.20210211'
    implementation 'com.wireguard.android:tunnel:1.0.20230427'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.0'
    implementation 'com.beust:klaxon:5.6'
    implementation 'androidx.appcompat:appcompat:1.6.1'

    implementation "androidx.multidex:multidex:2.0.1"
    /// to run wireguard on Android 25 or lower
    coreLibraryDesugaring "com.android.tools:desugar_jdk_libs:2.0.3"
}

tasks.withType(JavaCompile).configureEach {
    options.compilerArgs << '-Xlint:unchecked'
    options.deprecation = true
}

tasks.withType(KotlinCompile).configureEach {
    kotlinOptions.jvmTarget = JavaVersion.VERSION_17
}